{"version":3,"sources":["components/Tabs/Tabs.tsx","components/Content/Content.tsx","App.tsx","index.tsx"],"names":["Tabs","memo","tabs","onSelect","selected","className","map","tab","type","classNames","onClick","id","title","Content","content","App","useState","selectedTabId","setSelectedTabId","selectedTab","useMemo","find","tabId","ReactDOM","render","document","getElementById"],"mappings":"+OAWaA,EAAwBC,gBAAK,gBACxCC,EADwC,EACxCA,KAAMC,EADkC,EAClCA,SAAUC,EADwB,EACxBA,SADwB,OAGxC,qBAAKC,UAAU,OAAf,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,wBACEC,KAAK,SACLH,UACEI,IACE,eACA,CAAE,yBAA0BL,IAAaG,IAI7CG,QAAS,kBAAMP,EAASI,EAAII,KAT9B,SAWGJ,EAAIK,OAHAL,EAAII,YChBJE,G,MAA2BZ,gBAAK,gBAAGa,EAAH,EAAGA,QAAH,OAC3C,mBAAGT,UAAU,UAAb,SACGS,QCJCZ,G,MAAc,CAClB,CAAES,GAAI,QAASC,MAAO,QAASE,QAAS,mCACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,mCACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,qCAuB3BC,EApBOd,gBAAK,WACzB,MAA0Ce,mBAASd,EAAK,GAAGS,IAA3D,mBAAOM,EAAP,KAAsBC,EAAtB,KAEMC,EAAcC,mBAAQ,kBAAMlB,EAAKmB,MAAK,SAAAd,GAAG,OAAIA,EAAII,KAAOM,MAAkBf,EAAK,KACnF,CAACe,IAEH,OACE,sBAAKZ,UAAU,MAAf,UACE,uDAAwBc,EAAYP,SACpC,cAAC,EAAD,CACEV,KAAMA,EACNC,SATY,SAACmB,GAAD,OAAmBJ,EAAiBI,IAUhDlB,SAAUe,IAGZ,cAAC,EAAD,CAASL,QAASK,EAAYL,gBCxBpCS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3a7e36cc.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport classNames from 'classnames';\n\nimport './Tabs.scss';\n\ntype Props = {\n  tabs: Tab[],\n  onSelect: (tabId: string) => void,\n  selected: Tab,\n};\n\nexport const Tabs: React.FC<Props> = memo(({\n  tabs, onSelect, selected,\n}) => (\n  <div className=\"Tabs\">\n    {tabs.map(tab => (\n      <button\n        type=\"button\"\n        className={\n          classNames(\n            'Tabs__button',\n            { 'Tabs__button--selected': selected === tab },\n          )\n        }\n        key={tab.id}\n        onClick={() => onSelect(tab.id)}\n      >\n        {tab.title}\n      </button>\n    ))}\n  </div>\n));\n","import React, { memo } from 'react';\n\nimport './Content.scss';\n\ntype Props = {\n  content: string;\n};\n\nexport const Content: React.FC<Props> = memo(({ content }) => (\n  <p className=\"Content\">\n    {content}\n  </p>\n));\n","import React, { memo, useMemo, useState } from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Content } from './components/Content/Content';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Additional text for the 1st Tab' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Additional text for the 2st Tab' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Additional text for the 3st Tab' },\n];\n\nconst App: React.FC = memo(() => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectTab = (tabId: string) => setSelectedTabId(tabId);\n  const selectedTab = useMemo(() => tabs.find(tab => tab.id === selectedTabId) || tabs[0],\n    [selectedTabId]);\n\n  return (\n    <div className=\"App\">\n      <h1>{`Selected tab is ${selectedTab.title}`}</h1>\n      <Tabs\n        tabs={tabs}\n        onSelect={selectTab}\n        selected={selectedTab}\n      />\n\n      <Content content={selectedTab.content} />\n    </div>\n  );\n});\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}